%!PS

% begin included library code
% see https://codeberg.org/Firedrake/postscript-libraries/
/map { % array proc -> array
    2 dict begin
    /p exch def
    [ exch
      {
          p
      } forall
    ]
    end
} bind def

/test {
    /test.count test.count 1 add def
    {
        /test.pass test.pass 1 add def
    } {
        ( ) print
        test.count (....) cvs print
        (-fail) print
    } ifelse
} bind def

/values { % dict -> array of dict values
    [ exch
      {
          exch pop
      } forall
    ]
} bind def

/test.end {
    ( ) print
    test.count 0 gt {
        (Passed ) print
        test.pass (...) cvs print
        (/) print
        test.count (...) cvs print
        ( \() print
        test.pass 100 mul test.count idiv (...) cvs print
        (%\)) print
        (\r\n) print
    } if
} bind def

/dget {
    3 1 roll
    2 copy
    known {
        get exch pop
    } {
        pop pop
    } ifelse
} bind def

/test.start {
    print (:) print
    /test.pass 0 def
    /test.count 0 def
} bind def


% end included library code

/dvalue {
    0 dict begin
    /a exch def
    a 0 get a 1 get lt {
        a 0 get 64 mul a 1 get add
    } {
        a 0 get a 1 get 64 mul add
    } ifelse
    end
} bind def

/similardominoes {
    0 dict begin
    /c 0 dict def
    { dvalue } map {
        c exch
        2 copy
        0 dget 1 add put
    } forall
    0
    c values {
        dup 1 gt {
            add
        } {
            pop
        } ifelse
    } forall
    end
} bind def

(similardominoes) test.start
[[1 3] [3 1] [2 4] [6 8]] similardominoes 2 eq test
[[1 2] [2 1] [1 1] [1 2] [2 2]] similardominoes 3 eq test
test.end
