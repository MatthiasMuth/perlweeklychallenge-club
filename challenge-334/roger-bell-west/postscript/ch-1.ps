%!PS

% begin included library code
% see https://codeberg.org/Firedrake/postscript-libraries/
/test {
    /test.count test.count 1 add def
    {
        /test.pass test.pass 1 add def
    } {
        ( ) print
        test.count (....) cvs print
        (-fail) print
    } ifelse
} bind def

/reduce { % array proc -> value
    2 dict begin
    /p exch def
    /a exch def
    a 0 get
    1 1 a length 1 sub {
        a exch get
        p
    } for
    end
} bind def

/test.end {
    ( ) print
    test.count 0 gt {
        (Passed ) print
        test.pass (...) cvs print
        (/) print
        test.count (...) cvs print
        ( \() print
        test.pass 100 mul test.count idiv (...) cvs print
        (%\)) print
        (\r\n) print
    } if
} bind def

/test.start {
    print (:) print
    /test.pass 0 def
    /test.count 0 def
} bind def


% end included library code

/rangesum {
    exch
    dup
    3 1 roll
    sub
    1 add
    getinterval
    { add } reduce
} bind def

(rangesum) test.start
[-2 0 3 -5 2 -1] 0 2 rangesum 1 eq test
[1 -2 3 -4 5] 1 3 rangesum -3 eq test
[1 0 2 -1 3] 3 4 rangesum 2 eq test
[-5 4 -3 2 -1 0] 0 3 rangesum -2 eq test
[-1 0 2 -3 -2 1] 0 2 rangesum 1 eq test
test.end
