%!PS

% begin included library code
% see https://codeberg.org/Firedrake/postscript-libraries/
/test {
    /test.count test.count 1 add def
    {
        /test.pass test.pass 1 add def
    } {
        ( ) print
        test.count (....) cvs print
        (-fail) print
    } ifelse
} bind def

/enumerate.array {
    1 dict begin
    /a exch def
    [
      0 1 a length 1 sub {
          [ exch dup a exch get ]
      } for
    ]
    end
} bind def

/test.start {
    print (:) print
    /test.pass 0 def
    /test.count 0 def
} bind def

/test.end {
    ( ) print
    test.count 0 gt {
        (Passed ) print
        test.pass (...) cvs print
        (/) print
        test.count (...) cvs print
        ( \() print
        test.pass 100 mul test.count idiv (...) cvs print
        (%\)) print
        (\r\n) print
    } if
} bind def


% end included library code

/smallestindex {
    0 dict begin
    /a exch def
    -1
    a enumerate.array {
        aload pop
        /i exch def
        10 mod i eq {
            pop i
            exit
        } if
    } forall
    end
} bind def

(smallestindex) test.start
[0 1 2] smallestindex 0 eq test
[4 3 2 1] smallestindex 2 eq test
[1 2 3 4 5 6 7 8 9 0] smallestindex -1 eq test
test.end
