%!PS

% begin included library code
% see https://codeberg.org/Firedrake/postscript-libraries/
/a2s {
    2 dict begin
    /i exch def
    i length dup string /o exch def
    1 sub 0 exch 1 exch {
        dup i 3 -1 roll get o 3 1 roll put
    } for
    o
    end
} bind def

/test.end {
    ( ) print
    test.count 0 gt {
        (Passed ) print
        test.pass (...) cvs print
        (/) print
        test.count (...) cvs print
        ( \() print
        test.pass 100 mul test.count idiv (...) cvs print
        (%\)) print
        (\r\n) print
    } if
} bind def

/test {
    /test.count test.count 1 add def
    {
        /test.pass test.pass 1 add def
    } {
        ( ) print
        test.count (....) cvs print
        (-fail) print
    } ifelse
} bind def

/test.start {
    print (:) print
    /test.pass 0 def
    /test.count 0 def
} bind def

/dget {
    3 1 roll
    2 copy
    known {
        get exch pop
    } {
        pop pop
    } ifelse
} bind def

/s2a {
    [ exch { } forall ]
} bind def


% end included library code

/oddcharacter {
    0 dict begin
    /ss 0 dict def
    exch
    s2a {
        /c exch def
        ss c 0 dget 1 add ss exch c exch put
    } forall
    s2a {
        /c exch def
        ss c known ss c 0 dget 0 gt and {
            ss c 0 dget 1 sub ss exch c exch put
        } {
            [ c ] a2s
            exit
        } ifelse
    } forall
    end
} bind def

(oddcharacter) test.start
(Perl) (Preel) oddcharacter (e) eq test
(Weekly) (Weeakly) oddcharacter (a) eq test
(Box) (Boxy) oddcharacter (y) eq test
test.end
