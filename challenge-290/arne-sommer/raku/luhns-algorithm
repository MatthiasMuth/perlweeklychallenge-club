#! /usr/bin/env raku

unit sub MAIN ($str, :v($verbose));

my @digits = $str.flip.comb.grep: * ~~ /<[0..9]>/;

say ": Digits (reverse): @digits[]" if $verbose;

my $total = 0;

@digits.push(0) unless @digits.elems %% 2;

for @digits -> $a, $b
{
  my $sum = $b * 2; $sum = $sum.comb.sum if $sum > 9;

  say ": $a = $a" if $verbose;
  say ": $b * 2 = { $b * 2 }, total = $sum" if $verbose;

  $total += $a;
  $total += $sum;
}

say ! so $total mod 10;
